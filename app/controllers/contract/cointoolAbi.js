export const COINTOOL_ABI = [
  "constructor(uint256 userinput_buy_liquidity_fee, uint256 userinput_buy_marketing_fee, uint256 userinput_sell_liquidity_fee, uint256 userinput_sell_marketing_fee, uint256 userinput_max_tx_percent, uint256 userinput_max_wallet_percent, uint256 userinput_totalsupply, string userinput_token_name, string userinput_token_symbol, address userinput_marketingaddress)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event AutoNukeLP()",
  "event BoughtEarly(address indexed sniper)",
  "event Dev_WalleteloperUpdated(address indexed newWallet, address indexed oldWallet)",
  "event ExcludeFromFees(address indexed account, bool isExcluded)",
  "event ManualNukeLP()",
  "event Marketing_WalletUpdated(address indexed newWallet, address indexed oldWallet)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event SetAutomatedMarketMakerPair(address indexed pair, bool value)",
  "event SwapAndLiquify(uint256 tokensSwapped, uint256 ethReceived, uint256 tokensIntoLiquidity)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "event UpdateUniswapV2Router(address indexed newAddress, address indexed oldAddress)",
  "function Buy_Liquidity_Fee() view returns (uint256)",
  "function Buy_Marketing_Fee() view returns (uint256)",
  "function Buy_Total_Fees() view returns (uint256)",
  "function Enable_Trading() nonpayable",
  "function Limits_In_Effect() view returns (bool)",
  "function Marketing_Wallet() view returns (address)",
  "function Max_Transaction_Amount() view returns (uint256)",
  "function Max_Wallet_Amount() view returns (uint256)",
  "function Remove_Limits() nonpayable returns (bool)",
  "function Renounce_Ownership() nonpayable",
  "function RockswapV2Pair() view returns (address)",
  "function RockswapV2Router() view returns (address)",
  "function Sell_Liquidity_Fee() view returns (uint256)",
  "function Sell_Marketing_Fee() view returns (uint256)",
  "function Sell_Total_Fees() view returns (uint256)",
  "function Swap_Enabled() view returns (bool)",
  "function Swap_Threshold_Amount() view returns (uint256)",
  "function Trading_Active() view returns (bool)",
  "function Update_Buy_Fees(uint256 _marketingFee, uint256 _liquidityFee) nonpayable",
  "function Update_Max_Tx_Amount(uint256 newNum) nonpayable",
  "function Update_Max_Wallet_Amount(uint256 newNum) nonpayable",
  "function Update_Sell_Fees(uint256 _marketingFee, uint256 _liquidityFee) nonpayable",
  "function Update_Swap_Enabled(bool enabled) nonpayable",
  "function Update_Threshold_Amount(uint256 newAmount) nonpayable returns (bool)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 amount) nonpayable returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function decreaseAllowance(address spender, uint256 subtractedValue) nonpayable returns (bool)",
  "function excludeFromFees(address account, bool excluded) nonpayable",
  "function excludeFromMaxTransaction(address updAds, bool isEx) nonpayable",
  "function increaseAllowance(address spender, uint256 addedValue) nonpayable returns (bool)",
  "function isExcludedFromFees(address account) view returns (bool)",
  "function name() view returns (string)",
  "function owner() view returns (address)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address recipient, uint256 amount) nonpayable returns (bool)",
  "function transferFrom(address sender, address recipient, uint256 amount) nonpayable returns (bool)",
  "function transferOwnership(address newOwner) nonpayable",
  "function updateMarketing_Wallet(address newMarketing_Wallet) nonpayable",
  "receive() payable"
];
